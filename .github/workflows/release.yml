name: Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  IMAGE_FILE: dockerimg.tar
  IMAGE: picolibc

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        meson_flags: [
          "",

          # Math configurations
          "-Dnewlib-obsolete-math=false",
          "-Dnewlib-obsolete-math=false -Dwant-math-errno=true",
          "-Dnewlib-obsolete-math-float=true -Dnewlib-obsolete-math-double=true",
          "-Dnewlib-obsolete-math=true",
          "-Dnewlib-obsolete-math=true -Dwant-math-errno=true",

          # Tinystdio configurations
          "-Dio-float-exact=false",
          "-Dio-long-long=true",
          "-Dformat-default=integer",
          "-Dformat-default=float",

          # Malloc configurations
          "-Dnewlib-nano-malloc=false",

          # Original stdio configurations
          "-Dtinystdio=false -Dnewlib-io-float=false",
          "-Dtinystdio=false -Dnewlib-io-float=false -Dio-long-long=true",
          "-Dtinystdio=false -Dnewlib-io-float=true",
          "-Dtinystdio=false -Dnewlib-io-float=true -Dio-long-long=true",
          "-Dtinystdio=false -Dnewlib-io-float=true -Dio-long-long=true -Dnewlib-io-long-double=true",

          # Locale configurations
          "-Dnewlib-locale-info=true -Dnewlib-locale-info-extended=true -Dnewlib-mb=true",

          # Iconv configurations
          "-Dnewlib-iconv-external-ccs=true",

          # Multithread
          "-Dnewlib-multithread=true -Dnewlib-retargetable-locking=true",
          "-Dnewlib-multithread=true -Dnewlib-retargetable-locking=true -Dtinystdio=false",
        ]
        test: [
          "./.github/do-test do-native-configure build-native",
          "./.github/do-test do-aarch64-configure build-aarch64",
          "./.github/do-build do-lx106-configure build-lx106",
          "./.github/do-test do-i386-configure build-i386",
          "./.github/do-test do-x86_64-configure build-x86_64",
          "./.github/do-build do-m68k-configure build-m68k",
        ]

    steps:
      - name: Clone picolibc
        uses: actions/checkout@v2
        with:
          path: picolibc

      - name: Get current date
        id: date
        run: |
          echo "::set-output name=today::$(date -u +'%Y%m%d')"
          echo "::set-output name=yesterday::$(date -u -d '-1 day' +'%Y%m%d')"

      - name: Restore the Docker Image
        uses: actions/cache@v2
        with:
          path: ${{ env.IMAGE_FILE }}
          key: no-exact-key-is-used
          restore-keys: |
            ${{ env.IMAGE_FILE }}-${{ steps.date.outputs.today }}-
            ${{ env.IMAGE_FILE }}-${{ steps.date.outputs.yesterday }}-
            ${{ env.IMAGE_FILE }}-

      - name: Check
        run: |
          ls -al

      - name: Load and Check the Docker Image
        run: |
          docker load -i $IMAGE_FILE
          docker images -a $IMAGE

      - name: Release test
        run: |
          docker run  -v $(readlink -f picolibc):/picolibc -w /picolibc $IMAGE ${{ matrix.test }} ${{ matrix.meson_flags }} --buildtype release

      - name: Check Disk Space
        if: always()
        run: |
          df -h
          docker buildx du --verbose
