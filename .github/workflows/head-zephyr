name: Zephyr

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# When a PR is updated, cancel the jobs from the previous version. Merges
# do not define head_ref, so use run_id to never cancel those jobs.
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  # .github/do-zephyr -Dfortify-source=2 --buildtype release
  # is the largest cache, 429.5M (September 2023).
  CCACHE_SIZE: "450M"
  CCACHE_CMD: ccache
  DOCKERFILE: .github/Dockerfile-zephyr
  IMAGE: ghcr.io/${{ github.repository }}
  PACKAGES_FILE: .github/zephyr-packages.txt
  EXTRA_FILE: .github/zephyr-files.txt

jobs:
  cache-maker:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Clone picolibc
        uses: actions/checkout@v4

      - name: Check if image needs to be rebuilt
        run: |
          set -x
          echo IMAGE_TAG=${{ hashFiles( env.DOCKERFILE, env.PACKAGES_FILE, env.EXTRA_FILE ) }} >> $GITHUB_ENV
          # https://github.com/orgs/community/discussions/26279
          GHCR_TOKEN=$(echo ${{ secrets.GITHUB_TOKEN }} | base64)
          TAGS=$(curl -s -H "Authorization: Bearer ${GHCR_TOKEN}" https://ghcr.io/v2/picolibc/picolibc/tags/list)
          echo $TAGS | jq -e '.tags|any(. == "${{ env.IMAGE_TAG }}")'  > /dev/null || echo DOCKER_NEED_BUILD=1 >> $GITHUB_ENV

      - name: Set up Docker Buildx
        if: env.DOCKER_NEED_BUILD == '1'
        uses: docker/setup-buildx-action@v3

      - name: Build image
        if: env.DOCKER_NEED_BUILD == '1'
        run: |
          pwd
          ls
          docker build . --file .github/Dockerfile-zephyr --tag $IMAGE:${{ env.IMAGE_TAG }} --label "runnumber=${GITHUB_RUN_ID}"
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
          docker push $IMAGE:${{ env.IMAGE_TAG }}
