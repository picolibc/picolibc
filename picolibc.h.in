/*
 * Autogenerated by the Meson build system.
 * Do not edit, your changes will be lost.
 */

#pragma once

/* Use atomics for fgetc/ungetc for re-entrancy */
#cmakedefine __ATOMIC_UNGETC

/* Always optimize strcmp for performance */
#cmakedefine __FAST_STRCMP

/* Obsoleted. Use regular syscalls */
#cmakedefine MISSING_SYSCALL_NAMES

/* use global errno variable */
#cmakedefine __GLOBAL_ERRNO

/* use function to get errno address */
#cmakedefine __PICOLIBC_ERRNO_FUNCTION @__PICOLIBC_ERRNO_FUNCTION@

/* Turn on mmu in picocrt startup code */
#cmakedefine __PICOCRT_ENABLE_MMU

/* use thread local storage */
#cmakedefine __THREAD_LOCAL_STORAGE

/* use thread local storage for stack protection canary */
#cmakedefine __THREAD_LOCAL_STORAGE_STACK_GUARD

/* Use posix apis for console too */
#cmakedefine POSIX_CONSOLE

/* Optimize for space over speed */
#cmakedefine __PREFER_SIZE_OVER_SPEED

/* Obsoleted. Reentrant syscalls provided for us */
#cmakedefine REENTRANT_SYSCALLS_PROVIDED

/* Use tiny stdio from gcc avr */
#cmakedefine __TINY_STDIO

#cmakedefine _ATEXIT_DYNAMIC_ALLOC

#cmakedefine __FSEEK_OPTIMIZATION

#cmakedefine __FVWRITE_IN_STREAMIO

#cmakedefine __strong_reference

/* Use bitfields in packed structs */
#cmakedefine __HAVE_BITFIELDS_IN_PACKED_STRUCTS

/* Compiler flag to prevent detecting memcpy/memset patterns */
#cmakedefine __HAVE_CC_INHIBIT_LOOP_TO_LIBCALL

/* Compiler supports _Complex */
#cmakedefine __HAVE_COMPLEX

#cmakedefine __HAVE_FCNTL

/* IEEE fp funcs available */
#cmakedefine __IEEEFP_FUNCS

/* compiler supports INIT_ARRAY sections */
#cmakedefine __INIT_FINI_ARRAY

/* Support _init() and _fini() functions */
#cmakedefine __INIT_FINI_FUNCS

/* _set_tls and _init_tls functions available */
#cmakedefine __THREAD_LOCAL_STORAGE_API

/* Semihost APIs supported */
#cmakedefine __SEMIHOST

/* math library does not set errno (offering only ieee semantics) */
#cmakedefine __IEEE_LIBM

#cmakedefine __IO_FLOAT_EXACT

#cmakedefine __IO_SMALL_ULTOA

#cmakedefine __IO_PERCENT_N

#cmakedefine __IO_PERCENT_B

#cmakedefine __IO_WCHAR

#cmakedefine _LITE_EXIT

#cmakedefine __MB_CAPABLE

#cmakedefine __MB_EXTENDED_CHARSETS_ALL

#cmakedefine __MB_EXTENDED_CHARSETS_UCS

#cmakedefine __MB_EXTENDED_CHARSETS_ISO

#cmakedefine __MB_EXTENDED_CHARSETS_WINDOWS

#cmakedefine __MB_EXTENDED_CHARSETS_JIS

#cmakedefine __NANO_FORMATTED_IO

#cmakedefine __NANO_MALLOC

/* The newlib version in string format. */
#define _NEWLIB_VERSION "@NEWLIB_VERSION@"

#cmakedefine __PICO_EXIT

/* The Picolibc minor version number. */
#define _PICOLIBC_MINOR__ @PROJECT_VERSION_MINOR@

/* The Picolibc version in string format. */
#define _PICOLIBC_VERSION "@PROJECT_VERSION@"

/* The Picolibc major version number. */
#define _PICOLIBC__ @PROJECT_VERSION_MAJOR@

#cmakedefine _GLOBAL_ATEXIT

#cmakedefine __SINGLE_THREAD

#cmakedefine __UNBUF_STREAM_OPT

#cmakedefine __IO_C99_FORMATS

#cmakedefine __IO_LONG_LONG

#cmakedefine __IO_LONG_DOUBLE

#cmakedefine __IO_MINIMAL_LONG_LONG

#cmakedefine __IO_POS_ARGS

#define __IO_DEFAULT '@__IO_DEFAULT@'

/* math library sets errno */
#cmakedefine __MATH_ERRNO

#cmakedefine _WANT_REGISTER_FINI

#cmakedefine __WIDE_ORIENT

/* chatty assert */
#cmakedefine __ASSERT_VERBOSE

/* elix level */
#cmakedefine __ELIX_LEVEL @__ELIX_LEVEL@

/* The newlib minor version number. */
#define __NEWLIB_MINOR__ @NEWLIB_MINOR@

/* The newlib patch level. */
#define __NEWLIB_PATCHLEVEL__ @NEWLIB_PATCH@

/* The newlib major version number. */
#define __NEWLIB__ @NEWLIB_MAJOR@

/* Use old math code */
#define __OBSOLETE_MATH_FLOAT @__OBSOLETE_MATH_FLOAT@

#define __OBSOLETE_MATH_DOUBLE @__OBSOLETE_MATH_DOUBLE@

/* Compute static memory area sizes at runtime instead of link time */
#cmakedefine __PICOCRT_RUNTIME_SIZE

/* The Picolibc minor version number. */
#define __PICOLIBC_MINOR__ @PROJECT_VERSION_MINOR@

/* The Picolibc patch level. */
#define __PICOLIBC_PATCHLEVEL__ @PROJECT_VERSION_PATCH@

/* The Picolibc version in string format. */
#define __PICOLIBC_VERSION__ "@PROJECT_VERSION@"

/* The Picolibc major version number. */
#define __PICOLIBC__ @PROJECT_VERSION_MAJOR@

/* Compiler has Xtensa-specific core-isa.h header file */
#cmakedefine _XTENSA_HAVE_CONFIG_CORE_ISA_H
