/*
 * Autogenerated by the Meson build system.
 * Do not edit, your changes will be lost.
 */

#pragma once

/* Use atomics for fgetc/ungetc for re-entrancy */
#cmakedefine ATOMIC_UNGETC

/* Always optimize strcmp for performance */
#cmakedefine FAST_STRCMP

/* Obsoleted. Use regular syscalls */
#cmakedefine MISSING_SYSCALL_NAMES

/* use global errno variable */
#cmakedefine NEWLIB_GLOBAL_ERRNO

/* use function to get errno address */
#cmakedefine __PICOLIBC_ERRNO_FUNCTION @__PICOLIBC_ERRNO_FUNCTION@

/* use thread local storage */
#cmakedefine NEWLIB_TLS

/* Turn on caches in picocrt startup code */
#cmakedefine PICOCRT_ENABLE_CACHES

/* use thread local storage */
#cmakedefine PICOLIBC_TLS

/* Use open/close/read/write in tinystdio */
#cmakedefine POSIX_IO

/* Use posix apis for console too */
#cmakedefine POSIX_CONSOLE

/* Optimize for space over speed */
#cmakedefine PREFER_SIZE_OVER_SPEED

/* Obsoleted. Reentrant syscalls provided for us */
#cmakedefine REENTRANT_SYSCALLS_PROVIDED

/* Use tiny stdio from gcc avr */
#cmakedefine TINY_STDIO

#cmakedefine _ATEXIT_DYNAMIC_ALLOC

#cmakedefine _FSEEK_OPTIMIZATION

#cmakedefine _FVWRITE_IN_STREAMIO

#cmakedefine _HAVE_ALIAS_ATTRIBUTE

/* The compiler REALLY has the attribute __alloc_size__ */
#cmakedefine _HAVE_ALLOC_SIZE

/* The compiler supports the always_inline function attribute */
#cmakedefine _HAVE_ATTRIBUTE_ALWAYS_INLINE

/* The compiler supports the gnu_inline function attribute */
#cmakedefine _HAVE_ATTRIBUTE_GNU_INLINE

/* Use bitfields in packed structs */
#cmakedefine _HAVE_BITFIELDS_IN_PACKED_STRUCTS

/* The compiler supports __builtin_alloca */
#cmakedefine _HAVE_BUILTIN_ALLOCA

/* The compiler supports __builtin_copysign */
#cmakedefine _HAVE_BUILTIN_COPYSIGN

/* The compiler supports __builtin_copysignl */
#cmakedefine _HAVE_BUILTIN_COPYSIGNL

/* The compiler supports __builtin_ctz */
#cmakedefine _HAVE_BUILTIN_CTZ

/* The compiler supports __builtin_ctzl */
#cmakedefine _HAVE_BUILTIN_CTZL

/* The compiler supports __builtin_ctzll */
#cmakedefine _HAVE_BUILTIN_CTZLL

/* Compiler has __builtin_expect */
#cmakedefine _HAVE_BUILTIN_EXPECT

/* The compiler supports __builtin_ffs */
#cmakedefine _HAVE_BUILTIN_FFS

/* The compiler supports __builtin_ffsl */
#cmakedefine _HAVE_BUILTIN_FFSL

/* The compiler supports __builtin_ffsll */
#cmakedefine _HAVE_BUILTIN_FFSLL

/* The compiler supports __builtin_finitel */
#cmakedefine _HAVE_BUILTIN_FINITEL

/* The compiler supports __builtin_isfinite */
#cmakedefine _HAVE_BUILTIN_ISFINITE

/* The compiler supports __builtin_isinf */
#cmakedefine _HAVE_BUILTIN_ISINF

/* The compiler supports __builtin_isinfl */
#cmakedefine _HAVE_BUILTIN_ISINFL

/* The compiler supports __builtin_isnan */
#cmakedefine _HAVE_BUILTIN_ISNAN

/* The compiler supports __builtin_isnanl */
#cmakedefine _HAVE_BUILTIN_ISNANL

/* Compiler has __builtin_mul_overflow */
#cmakedefine _HAVE_BUILTIN_MUL_OVERFLOW

/* Compiler has __builtin_add_overflow */
#cmakedefine _HAVE_BUILTIN_ADD_OVERFLOW

/* Compiler flag to prevent detecting memcpy/memset patterns */
#cmakedefine _HAVE_CC_INHIBIT_LOOP_TO_LIBCALL

/* Compiler supports _Complex */
#cmakedefine _HAVE_COMPLEX

/* Compiler supports __builtin_complex */
#cmakedefine _HAVE_BUILTIN_COMPLEX

#cmakedefine _HAVE_FCNTL

#cmakedefine _HAVE_FORMAT_ATTRIBUTE

/* IEEE fp funcs available */
#cmakedefine _HAVE_IEEEFP_FUNCS

/* compiler supports INIT_ARRAY sections */
#cmakedefine _HAVE_INITFINI_ARRAY

/* Support _init() and _fini() functions */
#cmakedefine _HAVE_INIT_FINI

/* Compiler has long double type */
#cmakedefine _HAVE_LONG_DOUBLE

/* Compiler attribute to prevent the optimizer from adding new builtin calls */
#cmakedefine _HAVE_NO_BUILTIN_ATTRIBUTE

/* _set_tls and _init_tls functions available */
#cmakedefine _HAVE_PICOLIBC_TLS_API

/* Semihost APIs supported */
#cmakedefine _HAVE_SEMIHOST

#cmakedefine _HAVE_WEAK_ATTRIBUTE

#cmakedefine _ICONV_ENABLE_EXTERNAL_CCS

#cmakedefine _ICONV_FROM_ENCODING_

#cmakedefine _ICONV_FROM_ENCODING_BIG5

#cmakedefine _ICONV_FROM_ENCODING_CP775

#cmakedefine _ICONV_FROM_ENCODING_CP850

#cmakedefine _ICONV_FROM_ENCODING_CP852

#cmakedefine _ICONV_FROM_ENCODING_CP855

#cmakedefine _ICONV_FROM_ENCODING_CP866

#cmakedefine _ICONV_FROM_ENCODING_EUC_JP

#cmakedefine _ICONV_FROM_ENCODING_EUC_KR

#cmakedefine _ICONV_FROM_ENCODING_EUC_TW

#cmakedefine _ICONV_FROM_ENCODING_ISO_8859_1

#cmakedefine _ICONV_FROM_ENCODING_ISO_8859_10

#cmakedefine _ICONV_FROM_ENCODING_ISO_8859_11

#cmakedefine _ICONV_FROM_ENCODING_ISO_8859_13

#cmakedefine _ICONV_FROM_ENCODING_ISO_8859_14

#cmakedefine _ICONV_FROM_ENCODING_ISO_8859_15

#cmakedefine _ICONV_FROM_ENCODING_ISO_8859_2

#cmakedefine _ICONV_FROM_ENCODING_ISO_8859_3

#cmakedefine _ICONV_FROM_ENCODING_ISO_8859_4

#cmakedefine _ICONV_FROM_ENCODING_ISO_8859_5

#cmakedefine _ICONV_FROM_ENCODING_ISO_8859_6

#cmakedefine _ICONV_FROM_ENCODING_ISO_8859_7

#cmakedefine _ICONV_FROM_ENCODING_ISO_8859_8

#cmakedefine _ICONV_FROM_ENCODING_ISO_8859_9

#cmakedefine _ICONV_FROM_ENCODING_ISO_IR_111

#cmakedefine _ICONV_FROM_ENCODING_KOI8_R

#cmakedefine _ICONV_FROM_ENCODING_KOI8_RU

#cmakedefine _ICONV_FROM_ENCODING_KOI8_U

#cmakedefine _ICONV_FROM_ENCODING_KOI8_UNI

#cmakedefine _ICONV_FROM_ENCODING_UCS_2

#cmakedefine _ICONV_FROM_ENCODING_UCS_2BE

#cmakedefine _ICONV_FROM_ENCODING_UCS_2LE

#cmakedefine _ICONV_FROM_ENCODING_UCS_2_INTERNAL

#cmakedefine _ICONV_FROM_ENCODING_UCS_4

#cmakedefine _ICONV_FROM_ENCODING_UCS_4BE

#cmakedefine _ICONV_FROM_ENCODING_UCS_4LE

#cmakedefine _ICONV_FROM_ENCODING_UCS_4_INTERNAL

#cmakedefine _ICONV_FROM_ENCODING_US_ASCII

#cmakedefine _ICONV_FROM_ENCODING_UTF_16

#cmakedefine _ICONV_FROM_ENCODING_UTF_16BE

#cmakedefine _ICONV_FROM_ENCODING_UTF_16LE

#cmakedefine _ICONV_FROM_ENCODING_UTF_8

#cmakedefine _ICONV_FROM_ENCODING_WIN_1250

#cmakedefine _ICONV_FROM_ENCODING_WIN_1251

#cmakedefine _ICONV_FROM_ENCODING_WIN_1252

#cmakedefine _ICONV_FROM_ENCODING_WIN_1253

#cmakedefine _ICONV_FROM_ENCODING_WIN_1254

#cmakedefine _ICONV_FROM_ENCODING_WIN_1255

#cmakedefine _ICONV_FROM_ENCODING_WIN_1256

#cmakedefine _ICONV_FROM_ENCODING_WIN_1257

#cmakedefine _ICONV_FROM_ENCODING_WIN_1258

#cmakedefine _ICONV_TO_ENCODING_

#cmakedefine _ICONV_TO_ENCODING_BIG5

#cmakedefine _ICONV_TO_ENCODING_CP775

#cmakedefine _ICONV_TO_ENCODING_CP850

#cmakedefine _ICONV_TO_ENCODING_CP852

#cmakedefine _ICONV_TO_ENCODING_CP855

#cmakedefine _ICONV_TO_ENCODING_CP866

#cmakedefine _ICONV_TO_ENCODING_EUC_JP

#cmakedefine _ICONV_TO_ENCODING_EUC_KR

#cmakedefine _ICONV_TO_ENCODING_EUC_TW

#cmakedefine _ICONV_TO_ENCODING_ISO_8859_1

#cmakedefine _ICONV_TO_ENCODING_ISO_8859_10

#cmakedefine _ICONV_TO_ENCODING_ISO_8859_11

#cmakedefine _ICONV_TO_ENCODING_ISO_8859_13

#cmakedefine _ICONV_TO_ENCODING_ISO_8859_14

#cmakedefine _ICONV_TO_ENCODING_ISO_8859_15

#cmakedefine _ICONV_TO_ENCODING_ISO_8859_2

#cmakedefine _ICONV_TO_ENCODING_ISO_8859_3

#cmakedefine _ICONV_TO_ENCODING_ISO_8859_4

#cmakedefine _ICONV_TO_ENCODING_ISO_8859_5

#cmakedefine _ICONV_TO_ENCODING_ISO_8859_6

#cmakedefine _ICONV_TO_ENCODING_ISO_8859_7

#cmakedefine _ICONV_TO_ENCODING_ISO_8859_8

#cmakedefine _ICONV_TO_ENCODING_ISO_8859_9

#cmakedefine _ICONV_TO_ENCODING_ISO_IR_111

#cmakedefine _ICONV_TO_ENCODING_KOI8_R

#cmakedefine _ICONV_TO_ENCODING_KOI8_RU

#cmakedefine _ICONV_TO_ENCODING_KOI8_U

#cmakedefine _ICONV_TO_ENCODING_KOI8_UNI

#cmakedefine _ICONV_TO_ENCODING_UCS_2

#cmakedefine _ICONV_TO_ENCODING_UCS_2BE

#cmakedefine _ICONV_TO_ENCODING_UCS_2LE

#cmakedefine _ICONV_TO_ENCODING_UCS_2_INTERNAL

#cmakedefine _ICONV_TO_ENCODING_UCS_4

#cmakedefine _ICONV_TO_ENCODING_UCS_4BE

#cmakedefine _ICONV_TO_ENCODING_UCS_4LE

#cmakedefine _ICONV_TO_ENCODING_UCS_4_INTERNAL

#cmakedefine _ICONV_TO_ENCODING_US_ASCII

#cmakedefine _ICONV_TO_ENCODING_UTF_16

#cmakedefine _ICONV_TO_ENCODING_UTF_16BE

#cmakedefine _ICONV_TO_ENCODING_UTF_16LE

#cmakedefine _ICONV_TO_ENCODING_UTF_8

#cmakedefine _ICONV_TO_ENCODING_WIN_1250

#cmakedefine _ICONV_TO_ENCODING_WIN_1251

#cmakedefine _ICONV_TO_ENCODING_WIN_1252

#cmakedefine _ICONV_TO_ENCODING_WIN_1253

#cmakedefine _ICONV_TO_ENCODING_WIN_1254

#cmakedefine _ICONV_TO_ENCODING_WIN_1255

#cmakedefine _ICONV_TO_ENCODING_WIN_1256

#cmakedefine _ICONV_TO_ENCODING_WIN_1257

#cmakedefine _ICONV_TO_ENCODING_WIN_1258

/* math library does not set errno (offering only ieee semantics) */
#cmakedefine _IEEE_LIBM

#cmakedefine _IO_FLOAT_EXACT

#cmakedefine _PRINTF_SMALL_ULTOA

#cmakedefine _LITE_EXIT

#cmakedefine _MB_CAPABLE

#cmakedefine _MB_LEN_MAX 1

#cmakedefine _NANO_FORMATTED_IO

#cmakedefine _NANO_MALLOC

/* The newlib version in string format. */
#define _NEWLIB_VERSION "@NEWLIB_VERSION@"

#cmakedefine _PICO_EXIT

/* The Picolibc minor version number. */
#define _PICOLIBC_MINOR__ @PROJECT_VERSION_MINOR@

/* The Picolibc version in string format. */
#define _PICOLIBC_VERSION "@PROJECT_VERSION@"

/* The Picolibc major version number. */
#define _PICOLIBC__ @PROJECT_VERSION_MAJOR@

#cmakedefine _REENT_GLOBAL_ATEXIT

#cmakedefine _RETARGETABLE_LOCKING

#cmakedefine _UNBUF_STREAM_OPT

#cmakedefine _WANT_IO_C99_FORMATS

#cmakedefine _WANT_IO_LONG_LONG

#cmakedefine _WANT_IO_LONG_DOUBLE

#cmakedefine _WANT_MINIMAL_IO_LONG_LONG

#cmakedefine _WANT_IO_POS_ARGS

#cmakedefine _FORMAT_DEFAULT_DOUBLE

#cmakedefine _FORMAT_DEFAULT_FLOAT

#cmakedefine _FORMAT_DEFAULT_LONG_LONG

#cmakedefine _FORMAT_DEFAULT_INTEGER

#cmakedefine _FORMAT_DEFAULT_MINIMAL

/* math library sets errno */
#cmakedefine _WANT_MATH_ERRNO

#cmakedefine _WANT_REENT_SMALL

#cmakedefine _WANT_REGISTER_FINI

/* Obsoleted. Define time_t to long instead of using a 64-bit type */
#cmakedefine _WANT_USE_LONG_TIME_T

#cmakedefine _WIDE_ORIENT

/* chatty assert */
#cmakedefine _ASSERT_VERBOSE

/* extended locale support */
#cmakedefine __HAVE_LOCALE_INFO_EXTENDED__

/* locale support */
#cmakedefine __HAVE_LOCALE_INFO__

/* The newlib minor version number. */
#define __NEWLIB_MINOR__ @NEWLIB_MINOR@

/* The newlib patch level. */
#define __NEWLIB_PATCHLEVEL__ @NEWLIB_PATCH@

/* The newlib major version number. */
#define __NEWLIB__ @NEWLIB_MAJOR@

/* Use old math code */
#define __OBSOLETE_MATH_FLOAT @__OBSOLETE_MATH_FLOAT@

#define __OBSOLETE_MATH_DOUBLE @__OBSOLETE_MATH_DOUBLE@

/* Compute static memory area sizes at runtime instead of link time */
#cmakedefine __PICOLIBC_CRT_RUNTIME_SIZE

/* The Picolibc minor version number. */
#define __PICOLIBC_MINOR__ @PROJECT_VERSION_MINOR@

/* The Picolibc patch level. */
#define __PICOLIBC_PATCHLEVEL__ @PROJECT_VERSION_PATCH@

/* The Picolibc version in string format. */
#define __PICOLIBC_VERSION__ "@PROJECT_VERSION@"

/* The Picolibc major version number. */
#define __PICOLIBC__ @PROJECT_VERSION_MAJOR@

#cmakedefine __SINGLE_THREAD__

/* Compiler has Xtensa-specific core-isa.h header file */
#cmakedefine _XTENSA_HAVE_CONFIG_CORE_ISA_H
